{"version":3,"sources":["firestore.js","components/MainHeader.js","components/AddBook.js","components/Book.js","components/ListBook.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","MainHeader","setBookListOpen","setBookAddOpen","AppBar","position","className","elevation","color","ButtonGroup","size","fullWidth","Button","onClick","styles","field","margin","addedSuccess","fontFamily","AddBook","onAdd","useState","title","setTitle","isbn","setIsbn","author","setAuthor","genre","setGenre","publisher","setPublisher","addSuccess","setAddSuccess","onSubmit","e","preventDefault","setTimeout","alert","TextField","id","label","variant","value","onChange","target","style","role","type","Typography","visibility","Book","book","Card","CardHeader","avatar","Avatar","subheader","CardContent","ListBook","booksList","booksListView","setBooksListView","useEffect","Container","Grid","container","map","index","item","App","setBooksList","bookListOpen","bookAddOpen","getBooksList","collection","orderBy","get","then","snapshot","fireStoreBooks","docs","forEach","doc","push","data","addBook","newBook","a","add","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.860c872d.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyAFTA1AUxOG5ukRv2oQsc4t4TTf_-qKY88\",\n    authDomain: \"nsbm-spm-plw-lms.firebaseapp.com\",\n    projectId: \"nsbm-spm-plw-lms\",\n    storageBucket: \"nsbm-spm-plw-lms.appspot.com\",\n    messagingSenderId: \"206652651828\",\n    appId: \"1:206652651828:web:9d6940505da75c6a014d61\"\n});\n\nconst firestore = firebase.firestore();\n\nexport default firestore;\n","import { AppBar, Button, ButtonGroup } from \"@material-ui/core\";\n\nfunction MainHeader({ setBookListOpen, setBookAddOpen }) {\n    return (\n        <AppBar\n            position=\"fixed\"\n            className=\"appBar\"\n            elevation={3}\n            color=\"primary\"\n        >\n            <div className=\"header\">\n                <h1 className=\"headerText\">Library Management System</h1>\n            </div>\n            <div className=\"navBtnGroup\">\n                <ButtonGroup\n                    color=\"primary\"\n                    aria-label=\"outlined primary button group\"\n                    size=\"small\"\n                    fullWidth\n                >\n                    <Button\n                        onClick={() => {\n                            setBookAddOpen(true);\n                            setBookListOpen(false);\n                        }}\n                    >\n                        Add New Book\n                    </Button>\n                    <Button\n                        onClick={() => {\n                            setBookListOpen(true);\n                            setBookAddOpen(false);\n                        }}\n                    >\n                        List All Books\n                    </Button>\n                </ButtonGroup>\n            </div>\n        </AppBar>\n    );\n}\n\nexport default MainHeader;\n","import { useState } from \"react\";\n\nimport { TextField, Typography, Button } from \"@material-ui/core\";\n\nfunction AddBook({ onAdd }) {\n    const [title, setTitle] = useState(\"\");\n    const [isbn, setIsbn] = useState(\"\");\n    const [author, setAuthor] = useState(\"\");\n    const [genre, setGenre] = useState(\"\");\n    const [publisher, setPublisher] = useState(\"\");\n\n    const [addSuccess, setAddSuccess] = useState(false);\n\n    const bookAdded = () => {\n        setAddSuccess(true);\n        setTimeout(() => setAddSuccess(false), 1000);\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        if (!title || !isbn || !author || !genre || !publisher) {\n            alert(\"Please Add All the Infomation About the Book!\");\n            return;\n        }\n\n        const newBook = { title, isbn, author, genre, publisher };\n\n        onAdd(newBook);\n\n        setTitle(\"\");\n        setIsbn(\"\");\n        setAuthor(\"\");\n        setGenre(\"\");\n        setPublisher(\"\");\n\n        bookAdded();\n    };\n\n    return (\n        <div className=\"addbook\">\n            <form onSubmit={onSubmit}>\n                <TextField\n                    id=\"filled-basic\"\n                    label=\"Title\"\n                    variant=\"filled\"\n                    fullWidth\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                    style={styles.field}\n                    role=\"new-book-title\"\n                />\n                <TextField\n                    id=\"filled-basic\"\n                    label=\"ISBN\"\n                    variant=\"filled\"\n                    fullWidth\n                    value={isbn}\n                    onChange={(e) => setIsbn(e.target.value)}\n                    style={styles.field}\n                    role=\"new-book-isbn\"\n                />\n                <TextField\n                    id=\"filled-basic\"\n                    label=\"Author\"\n                    variant=\"filled\"\n                    fullWidth\n                    value={author}\n                    onChange={(e) => setAuthor(e.target.value)}\n                    style={styles.field}\n                    role=\"new-book-author\"\n                />\n                <TextField\n                    id=\"filled-basic\"\n                    label=\"Genre\"\n                    variant=\"filled\"\n                    fullWidth\n                    value={genre}\n                    onChange={(e) => setGenre(e.target.value)}\n                    style={styles.field}\n                    role=\"new-book-genre\"\n                />\n                <TextField\n                    id=\"filled-basic\"\n                    label=\"Publisher\"\n                    variant=\"filled\"\n                    fullWidth\n                    value={publisher}\n                    onChange={(e) => setPublisher(e.target.value)}\n                    style={styles.field}\n                    role=\"new-book-publisher\"\n                />\n                <Button\n                    type=\"submit\"\n                    color=\"primary\"\n                    variant=\"outlined\"\n                    fullWidth\n                    role=\"new-book-submit\"\n                >\n                    Add Book\n                </Button>\n            </form>\n\n            <Typography\n                variant=\"body1\"\n                color=\"primary\"\n                style={{\n                    ...styles.addedSuccess,\n                    visibility: addSuccess ? \"visible\" : \"hidden\"\n                }}\n                role=\"new-book-add-success\"\n            >\n                The Book is Added to the Database\n            </Typography>\n        </div>\n    );\n}\n\nconst styles = {\n    field: {\n        margin: \"0 0 1rem 0\"\n    },\n    addedSuccess: {\n        color: \"blue\",\n        fontFamily: \"Roboto\",\n        margin: \"2rem auto\"\n    }\n};\n\nexport default AddBook;\n","import {\n    Card,\n    CardHeader,\n    CardContent,\n    Typography,\n    Avatar\n} from \"@material-ui/core\";\nimport MenuBookTwoToneIcon from \"@material-ui/icons/MenuBookTwoTone\";\n\nexport default function Book({ book }) {\n    return (\n        <div>\n            <Card>\n                <CardHeader\n                    avatar={\n                        <Avatar>\n                            <MenuBookTwoToneIcon />\n                        </Avatar>\n                    }\n                    title={book.title}\n                    subheader={book.isbn}\n                />\n                <CardContent>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                        Author: {book.author}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                        Genre: {book.genre}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                        Publisher: {book.publisher}\n                    </Typography>\n                </CardContent>\n            </Card>\n        </div>\n    );\n}\n","import { useEffect, useState } from \"react\";\n\nimport { Container, Grid } from \"@material-ui/core\";\n\nimport Book from \"../components/Book\";\n\nfunction ListBook({ booksList }) {\n    const [booksListView, setBooksListView] = useState([]);\n\n    useEffect(() => {\n        setBooksListView(booksList);\n        return;\n    }, [booksList]);\n\n    return (\n        <div className=\"listBook\">\n            <Container>\n                <Grid container>\n                    {booksListView.map((book, index) => (\n                        <div key={index} className=\"listBookItem\">\n                            <Grid item>\n                                <Book book={book} />\n                            </Grid>\n                        </div>\n                    ))}\n                </Grid>\n            </Container>\n        </div>\n    );\n}\n\nexport default ListBook;\n","import { useState, useEffect } from \"react\";\n\nimport firestore from \"./firestore\";\n\nimport MainHeader from \"./components/MainHeader\";\nimport AddBook from \"./components/AddBook\";\nimport ListBook from \"./components/ListBook\";\n\nimport \"./App.css\";\n\nfunction App() {\n    const [booksList, setBooksList] = useState([]);\n    const [bookListOpen, setBookListOpen] = useState(false);\n    const [bookAddOpen, setBookAddOpen] = useState(true);\n\n    useEffect(() => {\n        getBooksList();\n        return;\n    }, [bookListOpen]);\n\n    const getBooksList = () => {\n        firestore\n            .collection(\"books\")\n            .orderBy(\"title\")\n            .get()\n            .then((snapshot) => {\n                const fireStoreBooks = [];\n                snapshot.docs.forEach((doc) => {\n                    fireStoreBooks.push(doc.data());\n                });\n                setBooksList(fireStoreBooks);\n            });\n    };\n\n    const addBook = async (newBook) => {\n        await firestore.collection(\"books\").add(newBook);\n    };\n\n    return (\n        <div className=\"App\">\n            <MainHeader\n                setBookAddOpen={setBookAddOpen}\n                setBookListOpen={setBookListOpen}\n            />\n            {bookAddOpen && <AddBook onAdd={addBook} />}\n            {bookListOpen && <ListBook booksList={booksList} />}\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}