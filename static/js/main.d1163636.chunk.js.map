{"version":3,"sources":["firestore.js","components/MainHeader.js","components/AddBookSuccess.js","components/BookCard.js","components/AddBookConfirmModal.js","components/AddBook.js","components/ListBook.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","useStyles","makeStyles","theme","appbar","padding","navigation","MainHeader","setBookListOpen","setBookAddOpen","classes","AppBar","position","elevation","color","className","Container","maxWidth","Typography","variant","align","gutterBottom","Paper","ButtonGroup","size","fullWidth","Button","onClick","bookAddedSuccess","border","borderRadius","marginBottom","bookAddedSuccessText","fontStyle","AddBookSuccess","bookcard","BookCard","book","Card","CardHeader","avatar","Avatar","title","subheader","isbn","CardContent","author","genre","publisher","modalcontainer","top","left","transform","modalpaper","background","modalbuttons","display","marginTop","modalconfirm","flex","marginRight","modalcancel","marginLeft","AddBookConfirmModal","visible","setVisible","confirm","newBook","Modal","open","onClose","Box","type","container","formField","margin","formButtons","formButtonAdd","formButtonClear","AddBook","onAdd","useState","setTitle","setIsbn","setAuthor","setGenre","setPublisher","setNewBook","formIncompleteErr","setFormIncompleteErr","confirmVisible","setConfirmVisible","addBookSuccess","setAddBookSuccess","clearForm","onSubmit","e","preventDefault","setTimeout","TextField","id","label","value","onChange","target","role","gridbook","width","ListBook","booksList","booksListView","setBooksListView","useEffect","Grid","map","index","item","App","setBooksList","bookListOpen","bookAddOpen","getBooksList","collection","orderBy","get","then","snapshot","fireStoreBooks","docs","forEach","doc","push","data","addBook","a","add","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1163636.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyAFTA1AUxOG5ukRv2oQsc4t4TTf_-qKY88\",\n    authDomain: \"nsbm-spm-plw-lms.firebaseapp.com\",\n    projectId: \"nsbm-spm-plw-lms\",\n    storageBucket: \"nsbm-spm-plw-lms.appspot.com\",\n    messagingSenderId: \"206652651828\",\n    appId: \"1:206652651828:web:9d6940505da75c6a014d61\"\n});\n\nconst firestore = firebase.firestore();\n\nexport default firestore;\n","import {\n    AppBar,\n    Button,\n    ButtonGroup,\n    Container,\n    Paper,\n    Typography,\n    makeStyles\n} from \"@material-ui/core\";\n\nfunction MainHeader({ setBookListOpen, setBookAddOpen }) {\n    const classes = useStyles();\n\n    return (\n        <AppBar\n            position=\"fixed\"\n            elevation={3}\n            color=\"primary\"\n            className={classes.appbar}\n        >\n            <Container maxWidth=\"sm\">\n                <Typography variant=\"h4\" align=\"center\" gutterBottom>\n                    Library Management System\n                </Typography>\n                <Paper className={classes.navigation}>\n                    <ButtonGroup color=\"primary\" size=\"small\" fullWidth>\n                        <Button\n                            onClick={() => {\n                                setBookAddOpen(true);\n                                setBookListOpen(false);\n                            }}\n                        >\n                            Add New Book\n                        </Button>\n                        <Button\n                            onClick={() => {\n                                setBookListOpen(true);\n                                setBookAddOpen(false);\n                            }}\n                        >\n                            List All Books\n                        </Button>\n                    </ButtonGroup>\n                </Paper>\n            </Container>\n        </AppBar>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    appbar: { padding: \"1rem 0 1.2rem 0\" },\n    navigation: { padding: \"0.2rem\" }\n}));\n\nexport default MainHeader;\n","import { Container, Typography, makeStyles } from \"@material-ui/core\";\n\nfunction AddBookSuccess() {\n    const classes = useStyles();\n\n    return (\n        <Container maxWidth=\"xs\" className={classes.bookAddedSuccess}>\n            <Typography\n                className={classes.bookAddedSuccessText}\n                variant=\"h5\"\n                color=\"primary\"\n                align=\"center\"\n            >\n                New Book Added Successfully!\n            </Typography>\n        </Container>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    bookAddedSuccess: {\n        border: \"1px dotted blue\",\n        borderRadius: \"5px\",\n        padding: \"1rem 1rem\",\n        marginBottom: \"3rem\"\n    },\n    bookAddedSuccessText: {\n        fontStyle: \"italic\"\n    }\n}));\n\nexport default AddBookSuccess;\n","import {\n    Card,\n    CardHeader,\n    CardContent,\n    Typography,\n    Avatar,\n    makeStyles\n} from \"@material-ui/core\";\nimport MenuBookTwoToneIcon from \"@material-ui/icons/MenuBookTwoTone\";\n\nfunction BookCard({ book }) {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.bookcard}>\n            <CardHeader\n                avatar={\n                    <Avatar>\n                        <MenuBookTwoToneIcon />\n                    </Avatar>\n                }\n                title={book.title}\n                subheader={book.isbn}\n            />\n            <CardContent>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                    Author: {book.author}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                    Genre: {book.genre}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                    Publisher: {book.publisher}\n                </Typography>\n            </CardContent>\n        </Card>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    bookcard: { padding: \"1rem\" }\n}));\n\nexport default BookCard;\n","import {\n    Container,\n    Box,\n    Button,\n    Modal,\n    Paper,\n    makeStyles\n} from \"@material-ui/core\";\n\nimport Book from \"./BookCard\";\n\nfunction AddBookConfirmModal({ visible, setVisible, confirm, newBook }) {\n    const classes = useStyles();\n\n    return (\n        <Modal open={visible} onClose={() => setVisible(false)}>\n            <Container className={classes.modalcontainer} maxWidth=\"xs\">\n                <Paper className={classes.modalpaper}>\n                    <Book book={newBook} />\n\n                    <Box className={classes.modalbuttons}>\n                        <Button\n                            type=\"submit\"\n                            onClick={confirm}\n                            color=\"primary\"\n                            variant=\"outlined\"\n                            size=\"large\"\n                            className={classes.modalconfirm}\n                        >\n                            Confirm\n                        </Button>\n                        <Button\n                            type=\"reset\"\n                            onClick={() => setVisible(false)}\n                            color=\"secondary\"\n                            variant=\"outlined\"\n                            size=\"large\"\n                            className={classes.modalcancel}\n                        >\n                            Cancel\n                        </Button>\n                    </Box>\n                </Paper>\n            </Container>\n        </Modal>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    modalcontainer: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\"\n    },\n    modalpaper: {\n        padding: \"1rem\",\n        background: \"#f0f0f0\"\n    },\n    modalbuttons: {\n        display: \"flex\",\n        marginTop: \"1rem\"\n    },\n    modalconfirm: {\n        flex: 1,\n        marginRight: \"0.5rem\",\n        background: \"#ffffff\"\n    },\n    modalcancel: {\n        flex: 1,\n        marginLeft: \"0.5rem\",\n        background: \"#ffffff\"\n    }\n}));\n\nexport default AddBookConfirmModal;\n","import { useState } from \"react\";\nimport { Container, TextField, Button, makeStyles } from \"@material-ui/core\";\nimport AddBookSuccess from \"./AddBookSuccess\";\nimport AddBookConfirmModal from \"./AddBookConfirmModal\";\n\nfunction AddBook({ onAdd }) {\n    const [title, setTitle] = useState(\"\");\n    const [isbn, setIsbn] = useState(\"\");\n    const [author, setAuthor] = useState(\"\");\n    const [genre, setGenre] = useState(\"\");\n    const [publisher, setPublisher] = useState(\"\");\n    const [newBook, setNewBook] = useState({});\n\n    const [formIncompleteErr, setFormIncompleteErr] = useState(false);\n    const [confirmVisible, setConfirmVisible] = useState(false);\n    const [addBookSuccess, setAddBookSuccess] = useState(false);\n\n    const classes = useStyles();\n\n    const formIncompleteMsg = () => {\n        setFormIncompleteErr(true);\n        setTimeout(() => setFormIncompleteErr(false), 1000);\n    };\n    const bookAdded = () => {\n        setAddBookSuccess(true);\n        setTimeout(() => setAddBookSuccess(false), 1000);\n    };\n    const clearForm = () => {\n        setTitle(\"\");\n        setIsbn(\"\");\n        setAuthor(\"\");\n        setGenre(\"\");\n        setPublisher(\"\");\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        if (!title || !isbn || !author || !genre || !publisher) {\n            formIncompleteMsg();\n            return;\n        }\n\n        setNewBook({ title, isbn, author, genre, publisher });\n\n        setConfirmVisible(true);\n    };\n\n    const sendBook = () => {\n        onAdd(newBook);\n\n        clearForm();\n\n        setConfirmVisible(false);\n\n        bookAdded();\n    };\n\n    return (\n        <Container maxWidth=\"sm\" className={classes.container}>\n            {addBookSuccess && <AddBookSuccess />}\n\n            <form onSubmit={onSubmit}>\n                <TextField\n                    id=\"filled-basic\"\n                    label=\"Title\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                    fullWidth\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                    className={classes.formField}\n                    role=\"new-book-title\"\n                />\n                <TextField\n                    id=\"filled-basic\"\n                    label=\"ISBN\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                    fullWidth\n                    value={isbn}\n                    onChange={(e) => setIsbn(e.target.value)}\n                    className={classes.formField}\n                    role=\"new-book-isbn\"\n                />\n                <TextField\n                    id=\"filled-basic\"\n                    label=\"Author\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                    fullWidth\n                    value={author}\n                    onChange={(e) => setAuthor(e.target.value)}\n                    className={classes.formField}\n                    role=\"new-book-author\"\n                />\n                <TextField\n                    id=\"filled-basic\"\n                    label=\"Genre\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                    fullWidth\n                    value={genre}\n                    onChange={(e) => setGenre(e.target.value)}\n                    className={classes.formField}\n                    role=\"new-book-genre\"\n                />\n                <TextField\n                    id=\"filled-basic\"\n                    label=\"Publisher\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                    fullWidth\n                    value={publisher}\n                    onChange={(e) => setPublisher(e.target.value)}\n                    className={classes.formField}\n                    role=\"new-book-publisher\"\n                />\n\n                <div className={classes.formButtons}>\n                    <Button\n                        type=\"submit\"\n                        color={formIncompleteErr ? \"secondary\" : \"primary\"}\n                        variant=\"outlined\"\n                        role=\"new-book-submit\"\n                        className={classes.formButtonAdd}\n                    >\n                        {formIncompleteErr ? \"Complete All Fields\" : \"Add Book\"}\n                    </Button>\n                    <Button\n                        type=\"reset\"\n                        onClick={clearForm}\n                        color=\"secondary\"\n                        variant=\"outlined\"\n                        role=\"new-book-clear\"\n                        className={classes.formButtonClear}\n                    >\n                        Clear\n                    </Button>\n                </div>\n            </form>\n\n            <AddBookConfirmModal\n                visible={confirmVisible}\n                setVisible={setConfirmVisible}\n                confirm={sendBook}\n                newBook={newBook}\n            />\n        </Container>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        padding: \"12rem 2rem 0 2rem\"\n    },\n    formField: {\n        margin: \"0 0 2rem 0\"\n    },\n    formButtons: {\n        display: \"flex\"\n    },\n    formButtonAdd: {\n        flex: 4,\n        marginRight: \"0.5rem\"\n    },\n    formButtonClear: {\n        flex: 1,\n        marginLeft: \"0.5rem\"\n    }\n}));\n\nexport default AddBook;\n","import { useEffect, useState } from \"react\";\n\nimport { Container, Grid, makeStyles } from \"@material-ui/core\";\n\nimport BookCard from \"../components/BookCard\";\n\nfunction ListBook({ booksList }) {\n    const [booksListView, setBooksListView] = useState([]);\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        setBooksListView(booksList);\n        return;\n    }, [booksList]);\n\n    return (\n        <Container maxWidth=\"sm\" className={classes.container}>\n            <Grid container>\n                {booksListView.map((book, index) => (\n                    <Grid className={classes.gridbook} key={index} item>\n                        <BookCard book={book} />\n                    </Grid>\n                ))}\n            </Grid>\n        </Container>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        padding: \"11.3rem 2rem 5rem 2rem\"\n    },\n    gridbook: {\n        marginBottom: \"1rem\",\n        width: \"100%\"\n    }\n}));\n\nexport default ListBook;\n","import { useState, useEffect } from \"react\";\nimport firestore from \"./firestore\";\nimport MainHeader from \"./components/MainHeader\";\nimport AddBook from \"./components/AddBook\";\nimport ListBook from \"./components/ListBook\";\nimport \"./App.css\";\n\nfunction App() {\n    const [booksList, setBooksList] = useState([]);\n    const [bookListOpen, setBookListOpen] = useState(false);\n    const [bookAddOpen, setBookAddOpen] = useState(true);\n\n    useEffect(() => {\n        getBooksList();\n        return;\n    }, [bookListOpen]);\n\n    const getBooksList = () => {\n        firestore\n            .collection(\"books\")\n            .orderBy(\"title\")\n            .get()\n            .then((snapshot) => {\n                const fireStoreBooks = [];\n                snapshot.docs.forEach((doc) => {\n                    fireStoreBooks.push(doc.data());\n                });\n                setBooksList(fireStoreBooks);\n            });\n    };\n\n    const addBook = async (newBook) => {\n        await firestore.collection(\"books\").add(newBook);\n    };\n\n    return (\n        <>\n            <MainHeader\n                setBookAddOpen={setBookAddOpen}\n                setBookListOpen={setBookListOpen}\n            />\n            {bookAddOpen && <AddBook onAdd={addBook} />}\n            {bookListOpen && <ListBook booksList={booksList} />}\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}