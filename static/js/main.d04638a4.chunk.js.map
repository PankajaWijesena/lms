{"version":3,"sources":["firestore.js","components/MainHeader.js","components/Book.js","components/AddBook.js","components/ListBook.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","MainHeader","setBookListOpen","setBookAddOpen","AppBar","position","className","elevation","color","ButtonGroup","size","fullWidth","Button","onClick","Book","book","Card","CardHeader","avatar","Avatar","title","subheader","isbn","CardContent","Typography","variant","author","genre","publisher","styles","formField","margin","formButton","display","formButtonAdd","flex","marginRight","formButtonClear","marginLeft","addedSuccess","fontFamily","AddBook","onAdd","useState","setTitle","setIsbn","setAuthor","setGenre","setPublisher","newBook","setNewBook","confirmModal","setConfirmModal","addSuccess","setAddSuccess","clearForm","onSubmit","e","preventDefault","alert","TextField","id","label","value","onChange","target","style","role","type","Modal","open","onClose","setTimeout","visibility","ListBook","booksList","booksListView","setBooksListView","useEffect","Container","Grid","container","map","index","item","App","setBooksList","bookListOpen","bookAddOpen","getBooksList","collection","orderBy","get","then","snapshot","fireStoreBooks","docs","forEach","doc","push","data","addBook","a","add","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d04638a4.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyAFTA1AUxOG5ukRv2oQsc4t4TTf_-qKY88\",\n    authDomain: \"nsbm-spm-plw-lms.firebaseapp.com\",\n    projectId: \"nsbm-spm-plw-lms\",\n    storageBucket: \"nsbm-spm-plw-lms.appspot.com\",\n    messagingSenderId: \"206652651828\",\n    appId: \"1:206652651828:web:9d6940505da75c6a014d61\"\n});\n\nconst firestore = firebase.firestore();\n\nexport default firestore;\n","import { AppBar, Button, ButtonGroup } from \"@material-ui/core\";\n\nfunction MainHeader({ setBookListOpen, setBookAddOpen }) {\n    return (\n        <AppBar\n            position=\"fixed\"\n            className=\"appBar\"\n            elevation={3}\n            color=\"primary\"\n        >\n            <div className=\"header\">\n                <h1 className=\"headerText\">Library Management System</h1>\n            </div>\n            <div className=\"navBtnGroup\">\n                <ButtonGroup\n                    color=\"primary\"\n                    aria-label=\"outlined primary button group\"\n                    size=\"small\"\n                    fullWidth\n                >\n                    <Button\n                        onClick={() => {\n                            setBookAddOpen(true);\n                            setBookListOpen(false);\n                        }}\n                    >\n                        Add New Book\n                    </Button>\n                    <Button\n                        onClick={() => {\n                            setBookListOpen(true);\n                            setBookAddOpen(false);\n                        }}\n                    >\n                        List All Books\n                    </Button>\n                </ButtonGroup>\n            </div>\n        </AppBar>\n    );\n}\n\nexport default MainHeader;\n","import {\n    Card,\n    CardHeader,\n    CardContent,\n    Typography,\n    Avatar\n} from \"@material-ui/core\";\nimport MenuBookTwoToneIcon from \"@material-ui/icons/MenuBookTwoTone\";\n\nexport default function Book({ book }) {\n    return (\n        <div>\n            <Card>\n                <CardHeader\n                    avatar={\n                        <Avatar>\n                            <MenuBookTwoToneIcon />\n                        </Avatar>\n                    }\n                    title={book.title}\n                    subheader={book.isbn}\n                />\n                <CardContent>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                        Author: {book.author}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                        Genre: {book.genre}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                        Publisher: {book.publisher}\n                    </Typography>\n                </CardContent>\n            </Card>\n        </div>\n    );\n}\n","import { useState } from \"react\";\n\nimport { TextField, Typography, Button, Modal } from \"@material-ui/core\";\n\nimport Book from \"../components/Book\";\n\nfunction AddBook({ onAdd }) {\n    const [title, setTitle] = useState(\"\");\n    const [isbn, setIsbn] = useState(\"\");\n    const [author, setAuthor] = useState(\"\");\n    const [genre, setGenre] = useState(\"\");\n    const [publisher, setPublisher] = useState(\"\");\n    const [newBook, setNewBook] = useState({});\n\n    const [confirmModal, setConfirmModal] = useState(false);\n    const [addSuccess, setAddSuccess] = useState(false);\n\n    const bookAdded = () => {\n        setAddSuccess(true);\n        setTimeout(() => setAddSuccess(false), 1000);\n    };\n\n    const clearForm = () => {\n        setTitle(\"\");\n        setIsbn(\"\");\n        setAuthor(\"\");\n        setGenre(\"\");\n        setPublisher(\"\");\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        if (!title || !isbn || !author || !genre || !publisher) {\n            alert(\"Please Add All the Infomation About the Book!\");\n            return;\n        }\n\n        setNewBook({ title, isbn, author, genre, publisher });\n\n        setConfirmModal(true);\n    };\n\n    const sendBook = () => {\n        onAdd(newBook);\n\n        clearForm();\n\n        setConfirmModal(false);\n\n        bookAdded();\n    };\n\n    return (\n        <div className=\"addbook\">\n            <form onSubmit={onSubmit}>\n                <TextField\n                    id=\"filled-basic\"\n                    label=\"Title\"\n                    variant=\"filled\"\n                    fullWidth\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                    style={styles.formField}\n                    role=\"new-book-title\"\n                />\n                <TextField\n                    id=\"filled-basic\"\n                    label=\"ISBN\"\n                    variant=\"filled\"\n                    fullWidth\n                    value={isbn}\n                    onChange={(e) => setIsbn(e.target.value)}\n                    style={styles.formField}\n                    role=\"new-book-isbn\"\n                />\n                <TextField\n                    id=\"filled-basic\"\n                    label=\"Author\"\n                    variant=\"filled\"\n                    fullWidth\n                    value={author}\n                    onChange={(e) => setAuthor(e.target.value)}\n                    style={styles.formField}\n                    role=\"new-book-author\"\n                />\n                <TextField\n                    id=\"filled-basic\"\n                    label=\"Genre\"\n                    variant=\"filled\"\n                    fullWidth\n                    value={genre}\n                    onChange={(e) => setGenre(e.target.value)}\n                    style={styles.formField}\n                    role=\"new-book-genre\"\n                />\n                <TextField\n                    id=\"filled-basic\"\n                    label=\"Publisher\"\n                    variant=\"filled\"\n                    fullWidth\n                    value={publisher}\n                    onChange={(e) => setPublisher(e.target.value)}\n                    style={styles.formField}\n                    role=\"new-book-publisher\"\n                />\n                <div style={styles.formButton}>\n                    <Button\n                        type=\"submit\"\n                        color=\"primary\"\n                        variant=\"outlined\"\n                        role=\"new-book-submit\"\n                        style={styles.formButtonAdd}\n                    >\n                        Add Book\n                    </Button>\n                    <Button\n                        type=\"reset\"\n                        onClick={clearForm}\n                        color=\"secondary\"\n                        variant=\"outlined\"\n                        role=\"new-book-clear\"\n                        style={styles.formButtonClear}\n                    >\n                        Clear\n                    </Button>\n                </div>\n            </form>\n\n            <Modal open={confirmModal} onClose={() => setConfirmModal(false)}>\n                <div className=\"addbookModal\">\n                    <Book book={newBook} />\n                    <div className=\"addbookModalBtn\">\n                        <Button\n                            type=\"submit\"\n                            onClick={sendBook}\n                            color=\"primary\"\n                            variant=\"contained\"\n                            className=\"addbookModalConfirm\"\n                        >\n                            Confirm\n                        </Button>\n                        <Button\n                            onClick={() => setConfirmModal(false)}\n                            color=\"secondary\"\n                            variant=\"contained\"\n                            className=\"addbookModalCancel\"\n                        >\n                            Cancel\n                        </Button>\n                    </div>\n                </div>\n            </Modal>\n\n            <Typography\n                variant=\"body1\"\n                color=\"primary\"\n                style={{\n                    ...styles.addedSuccess,\n                    visibility: addSuccess ? \"visible\" : \"hidden\"\n                }}\n                role=\"new-book-add-success\"\n            >\n                The Book is Added to the Database\n            </Typography>\n        </div>\n    );\n}\n\nconst styles = {\n    formField: {\n        margin: \"0 0 1rem 0\"\n    },\n    formButton: {\n        display: \"flex\"\n    },\n    formButtonAdd: {\n        flex: 4,\n        marginRight: \"0.3rem\"\n    },\n    formButtonClear: {\n        flex: 1,\n        marginLeft: \"0.3rem\"\n    },\n    addedSuccess: {\n        color: \"blue\",\n        fontFamily: \"Roboto\",\n        margin: \"2rem auto\"\n    }\n};\n\nexport default AddBook;\n","import { useEffect, useState } from \"react\";\n\nimport { Container, Grid } from \"@material-ui/core\";\n\nimport Book from \"../components/Book\";\n\nfunction ListBook({ booksList }) {\n    const [booksListView, setBooksListView] = useState([]);\n\n    useEffect(() => {\n        setBooksListView(booksList);\n        return;\n    }, [booksList]);\n\n    return (\n        <div className=\"listBook\">\n            <Container>\n                <Grid container>\n                    {booksListView.map((book, index) => (\n                        <div key={index} className=\"listBookItem\">\n                            <Grid item>\n                                <Book book={book} />\n                            </Grid>\n                        </div>\n                    ))}\n                </Grid>\n            </Container>\n        </div>\n    );\n}\n\nexport default ListBook;\n","import { useState, useEffect } from \"react\";\n\nimport firestore from \"./firestore\";\n\nimport MainHeader from \"./components/MainHeader\";\nimport AddBook from \"./components/AddBook\";\nimport ListBook from \"./components/ListBook\";\n\nimport \"./App.css\";\n\nfunction App() {\n    const [booksList, setBooksList] = useState([]);\n    const [bookListOpen, setBookListOpen] = useState(false);\n    const [bookAddOpen, setBookAddOpen] = useState(true);\n\n    useEffect(() => {\n        getBooksList();\n        return;\n    }, [bookListOpen]);\n\n    const getBooksList = () => {\n        firestore\n            .collection(\"books\")\n            .orderBy(\"title\")\n            .get()\n            .then((snapshot) => {\n                const fireStoreBooks = [];\n                snapshot.docs.forEach((doc) => {\n                    fireStoreBooks.push(doc.data());\n                });\n                setBooksList(fireStoreBooks);\n            });\n    };\n\n    const addBook = async (newBook) => {\n        await firestore.collection(\"books\").add(newBook);\n    };\n\n    return (\n        <div className=\"App\">\n            <MainHeader\n                setBookAddOpen={setBookAddOpen}\n                setBookListOpen={setBookListOpen}\n            />\n            {bookAddOpen && <AddBook onAdd={addBook} />}\n            {bookListOpen && <ListBook booksList={booksList} />}\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}